{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [taskt, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  function handleInputChange(event) {}\n  function addtask() {}\n  function deleteTask(index) {}\n  function moveTaskUp(index) {}\n  function moveTaskDown(index) {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ToDoList, \"ERDht7rflGpx3bwUXEGyI0aLVIQ=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","ToDoList","_s","taskt","setTasks","newTask","setNewTask","handleInputChange","event","addtask","deleteTask","index","moveTaskUp","moveTaskDown","_c","$RefreshReg$"],"sources":["/Users/vlada_kalnytska/Documents/vscode/to-do-list/src/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDoList() {\n\n    const [taskt, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState(\"\");\n\n    function handleInputChange(event) {\n\n    }\n\n    function addtask() {\n\n    }\n\n    function deleteTask(index) {\n\n    }\n\n    function moveTaskUp(index) {\n\n    }\n\n    function moveTaskDown(index) {\n\n    }\n\n    return (<></>)\n}\n\nexport default ToDoList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASW,iBAAiBA,CAACC,KAAK,EAAE,CAElC;EAEA,SAASC,OAAOA,CAAA,EAAG,CAEnB;EAEA,SAASC,UAAUA,CAACC,KAAK,EAAE,CAE3B;EAEA,SAASC,UAAUA,CAACD,KAAK,EAAE,CAE3B;EAEA,SAASE,YAAYA,CAACF,KAAK,EAAE,CAE7B;EAEA,oBAAQX,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACjB;AAACI,EAAA,CA1BQD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}