{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ToDoList(){// const [tasks, setTasks] = useState([{text: \"new Task1\", isCompleted: false},{text: \"new Task2\", isCompleted: false}, {text: \"new Task3\", isCompleted: false}]);\nconst[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState(\"\");const[filter,setFilter]=useState(\"all\");const[editingIndex,setEditingIndex]=useState(null);const[editedText,setEditedText]=useState(\"\");const filteredTasks=tasks.filter(task=>{if(filter===\"completed\")return task.isCompleted;if(filter===\"incomplete\")return!task.isCompleted;return true;});function getNoTasksMessage(){switch(filter){case\"completed\":return\"No completed tasks to display\";case\"incomplete\":return\"No incomplete tasks to display. Well done!\";case\"all\":default:return\"No tasks to display. Click \\\"Add\\\" to make a new task :)\";}}function handleKeyPress(event){if(event.key==\"Enter\"){event.preventDefault();addTask();}}function handleInputChange(event){setNewTask(event.target.value);}function addTask(){if(newTask.trim()!==\"\"){setTasks(t=>[...t,{text:newTask,isCompleted:false}]);setNewTask('');}}function deleteTask(index){const updatedTasks=tasks.filter((_,i)=>i!==index);setTasks(updatedTasks);}function moveTaskUp(index){if(index>0){const updatedTasks=[...tasks];[updatedTasks[index],updatedTasks[index-1]]=[updatedTasks[index-1],updatedTasks[index]];setTasks(updatedTasks);}}function moveTaskDown(index){if(index<tasks.length-1){const updatedTasks=[...tasks];[updatedTasks[index],updatedTasks[index+1]]=[updatedTasks[index+1],updatedTasks[index]];setTasks(updatedTasks);}}function toggleCompleteTask(index){const updatedTasks=tasks.map((task,i)=>{return i===index?{...task,isCompleted:!task.isCompleted}:task;});setTasks(updatedTasks);}function handleFilterChange(event){setFilter(event.target.value);}function startEditing(index){setEditingIndex(index);setEditedText(tasks[index].text);}function cancelEditing(){setEditingIndex(null);setEditedText(\"\");}function saveEdit(index){const updatedTasks=tasks.map((task,i)=>{if(i===index){return{...task,text:editedText};}return task;});setTasks(updatedTasks);setEditingIndex(null);setEditedText(\"\");}return/*#__PURE__*/_jsxs(\"div\",{className:\"to-do-list\",children:[/*#__PURE__*/_jsx(\"section\",{className:\"title-background-image section-title\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"To-Do-List\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"myInputNewTask\",type:\"text\",placeholder:\"Enter a task...\",value:newTask,onChange:handleInputChange,onKeyDown:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{id:\"myBtn\",className:\"add-button\",onClick:addTask,children:\"\\uFF0B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-select\",children:/*#__PURE__*/_jsxs(\"select\",{id:\"filter\",value:filter,onChange:handleFilterChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All tasks\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed tasks\"}),/*#__PURE__*/_jsx(\"option\",{value:\"incomplete\",children:\"Incomplete tasks\"})]})})]}),/*#__PURE__*/_jsx(\"ol\",{children:filteredTasks.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-tasks\",children:getNoTasksMessage()}):filteredTasks.map((task,index)=>/*#__PURE__*/_jsxs(\"li\",{className:task.isCompleted?\"completed-task\":\"\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.isCompleted,onChange:()=>toggleCompleteTask(index),className:\"my-checkbox\"}),editingIndex===index?/*#__PURE__*/_jsxs(\"div\",{className:\"edit-task-container\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"myInputEditTask\",type:\"text\",value:editedText,onChange:e=>setEditedText(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:()=>saveEdit(index),children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:cancelEditing,children:\"\\u274C\"})]}):/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:task.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"optional-button\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-button\",onClick:()=>startEditing(index),children:\"\\u270F\\uFE0F\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>deleteTask(index),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"move-button\",onClick:()=>moveTaskUp(index),children:\"\\u2B06\"}),/*#__PURE__*/_jsx(\"button\",{className:\"move-button\",onClick:()=>moveTaskDown(index),children:\"\\u2B07\"})]})]},index))})]});}export default ToDoList;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ToDoList","tasks","setTasks","newTask","setNewTask","filter","setFilter","editingIndex","setEditingIndex","editedText","setEditedText","filteredTasks","task","isCompleted","getNoTasksMessage","handleKeyPress","event","key","preventDefault","addTask","handleInputChange","target","value","trim","t","text","deleteTask","index","updatedTasks","_","i","moveTaskUp","moveTaskDown","length","toggleCompleteTask","map","handleFilterChange","startEditing","cancelEditing","saveEdit","className","children","id","type","placeholder","onChange","onKeyDown","onClick","checked","e"],"sources":["/Users/vlada_kalnytska/Documents/vscode/to-do-list/src/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDoList() {\n    \n    // const [tasks, setTasks] = useState([{text: \"new Task1\", isCompleted: false},{text: \"new Task2\", isCompleted: false}, {text: \"new Task3\", isCompleted: false}]);\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState(\"\");\n    const [filter, setFilter] = useState(\"all\")\n\n    const [editingIndex, setEditingIndex] = useState(null);\n    const [editedText, setEditedText] = useState(\"\");\n\n    const filteredTasks = tasks.filter((task) => {\n        if (filter === \"completed\") return task.isCompleted;\n        if (filter === \"incomplete\") return !task.isCompleted;\n        return true;\n    })\n\n    function getNoTasksMessage() {\n        switch (filter) {\n            case \"completed\":\n                return \"No completed tasks to display\";\n            case \"incomplete\":\n                return \"No incomplete tasks to display. Well done!\"; \n            case \"all\":\n            default:\n                return \"No tasks to display. Click \\\"Add\\\" to make a new task :)\";\n        }\n    }\n\n    function handleKeyPress(event) {\n        if (event.key == \"Enter\") {\n            event.preventDefault();\n            addTask();\n        }\n    }\n\n    function handleInputChange(event) {\n        setNewTask(event.target.value)\n    }\n\n    function addTask() {\n        if (newTask.trim() !== \"\") {\n            setTasks(t => [...t, { text: newTask, isCompleted: false }]);\n            setNewTask('')\n        }\n    }\n\n    function deleteTask(index) {\n        const updatedTasks = tasks.filter((_, i) => i !== index)\n        setTasks(updatedTasks);\n    }\n\n    function moveTaskUp(index) {\n        if (index > 0) {\n            const updatedTasks = [...tasks];\n            [updatedTasks[index], updatedTasks[index - 1]] = [updatedTasks[index - 1], updatedTasks[index]];\n            setTasks(updatedTasks);\n        }\n    }\n\n    function moveTaskDown(index) {\n        if (index < tasks.length - 1) {\n            const updatedTasks = [...tasks];\n            [updatedTasks[index], updatedTasks[index + 1]] = [updatedTasks[index + 1], updatedTasks[index]];\n            setTasks(updatedTasks);\n        }\n    }\n\n    function toggleCompleteTask(index) {\n        const updatedTasks = tasks.map((task, i) => {\n            return i === index ? {...task, isCompleted: !task.isCompleted} : task\n        })\n        setTasks(updatedTasks)\n    }\n\n    function handleFilterChange(event) {\n        setFilter(event.target.value)\n    }\n\n\n    function startEditing(index) {\n        setEditingIndex(index);\n        setEditedText(tasks[index].text);\n    }\n\n    function cancelEditing() {\n        setEditingIndex(null);\n        setEditedText(\"\");\n    }\n\n    function saveEdit(index) {\n        const updatedTasks = tasks.map((task, i) => {\n            if (i === index) {\n                return { ...task, text: editedText };\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n        setEditingIndex(null);\n        setEditedText(\"\");\n    }\n\n\n    return (\n        <div className = \"to-do-list\">\n            <section className=\"title-background-image section-title\">\n                <h1 className=\"title\">To-Do-List</h1>\n            </section>\n            <div className=\"input-container\">\n                <input\n                    id=\"myInputNewTask\"\n                    type = \"text\"\n                    placeholder = \"Enter a task...\"\n                    value = { newTask }\n                    onChange = { handleInputChange }\n                    onKeyDown={handleKeyPress}/> \n                <button id = \"myBtn\" className=\"add-button\" onClick={ addTask }>\n                    ＋   \n                </button>  \n                <div className=\"filter-select\">\n                    <select id=\"filter\" value={filter} onChange={handleFilterChange}>\n                        <option value=\"all\">All tasks</option>\n                        <option value=\"completed\">Completed tasks</option>\n                        <option value=\"incomplete\">Incomplete tasks</option>\n                    </select>\n                </div>             \n            </div>\n\n            <ol>\n                {\n                    filteredTasks.length === 0 ? (\n                        <p className=\"no-tasks\">{getNoTasksMessage()}</p>\n                    ) : filteredTasks.map((task, index) => \n                        <li \n                            key = {index} \n                            className = {task.isCompleted ? \"completed-task\" : \"\"}\n                        >\n                            <input\n                                type=\"checkbox\"\n                                checked={task.isCompleted}\n                                onChange={() => toggleCompleteTask(index)}\n                                className=\"my-checkbox\"\n                            />\n                            {editingIndex === index ? (\n                                <div className=\"edit-task-container\">\n                                    <input\n                                        id=\"myInputEditTask\"\n                                        type=\"text\"\n                                        value={editedText}\n                                        onChange={(e) => setEditedText(e.target.value)}\n                                    />\n                                    <button className=\"save-button\" onClick={() => saveEdit(index)}>✅</button>\n                                    <button className=\"cancel-button\" onClick={cancelEditing}>❌</button>\n                                </div>\n                            ) : (\n                                <span className=\"text\">{task.text}</span>\n                            )}\n                            <div className=\"optional-button\">\n                                <button className=\"edit-button\" onClick={() => startEditing(index)}>\n                                    ✏️\n                                </button>\n                                <button className=\"delete-button\" onClick={() => deleteTask(index)}>\n                                  Delete\n                                </button>\n                                <button className=\"move-button\" onClick={() => moveTaskUp(index)}>\n                                  ⬆\n                                </button>\n                                <button className=\"move-button\" onClick={() => moveTaskDown(index)}>\n                                  ⬇\n                                </button>\n                            </div>\n                        </li>\n                    )\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default ToDoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}